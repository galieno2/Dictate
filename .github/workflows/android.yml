# Nome do Workflow
name: Build APK

# Gatilho (trigger) que inicia o workflow
on:
  push:
    branches:
      - main # Executa sempre que houver um push na branch 'main'

jobs:
  build:
    # Nome do job
    name: Build Debug APK
    # Máquina virtual onde o job será executado
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código do seu repositório
      - name: Checkout code
        uses: actions/checkout@v4 # Versão atualizada

      # 2. Configuração do Java Development Kit (JDK)
      - name: Set up JDK 17
        uses: actions/setup-java@v4 # Versão atualizada
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Cache do Gradle para acelerar o build
      - name: Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. Tornar o script do Gradle executável
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 5. Compilar o projeto e gerar o APK de debug
      - name: Build APK
        run: ./gradlew assembleDebug

      # 6. Upload do APK como um artefato
      - name: Upload APK
        uses: actions/upload-artifact@v4 # Versão atualizada
        with:
          name: Dictate-APK # Nome do artefato que será criado
          # Caminho mais seguro para encontrar o APK
          path: '**/build/outputs/apk/debug/app-debug.apk'
